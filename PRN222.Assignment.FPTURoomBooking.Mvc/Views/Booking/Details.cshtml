@model BookingViewModel
@using System.Security.Claims
@using PRN222.Assignment.FPTURoomBooking.Repositories.Models

@{
    ViewData["Title"] = "Booking Details";
    var isOwner = Model.AccountId.ToString() == User.FindFirstValue(ClaimTypes.NameIdentifier);
    var canModify = isOwner && Model.Status == BookingStatus.Pending;
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Booking Details</h1>
    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-info-circle me-1"></i> Basic Information
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-4">Booking ID</dt>
                        <dd class="col-sm-8">@(Model.Id.ToString()[..8])...</dd>

                        <dt class="col-sm-4">Booking Date</dt>
                        <dd class="col-sm-8">@Model.BookingDate.ToString("yyyy-MM-dd")</dd>

                        <dt class="col-sm-4">Status</dt>
                        <dd class="col-sm-8">
                            <span class="badge @(Model.Status switch {
                                BookingStatus.Pending => "bg-warning text-dark",
                                BookingStatus.Approved => "bg-success",
                                BookingStatus.Rejected => "bg-danger",
                                BookingStatus.Cancelled => "bg-secondary",
                                _ => "bg-primary"
                            })">@Model.StatusName</span>
                        </dd>

                        <dt class="col-sm-4">Booked By</dt>
                        <dd class="col-sm-8">@Model.AccountName</dd>

                        @if (Model.ManagerName != null)
                        {
                            <dt class="col-sm-4">Approved By</dt>
                            <dd class="col-sm-8">@Model.ManagerName</dd>
                        }

                        <dt class="col-sm-4">Created At</dt>
                        <dd class="col-sm-8">@Model.CreatedAt.ToString("g")</dd>

                        @if (Model.UpdatedAt.HasValue)
                        {
                            <dt class="col-sm-4">Last Updated</dt>
                            <dd class="col-sm-8">@Model.UpdatedAt.Value.ToString("g")</dd>
                        }
                    </dl>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-clock me-1"></i> Room Information
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-4">Room</dt>
                        <dd class="col-sm-8">@Model.RoomName</dd>

                        <dt class="col-sm-4">Campus</dt>
                        <dd class="col-sm-8">@Model.CampusName</dd>

                        <dt class="col-sm-4">Time Range</dt>
                        <dd class="col-sm-8">@Model.StartTime.ToString("HH:mm") - @Model.EndTime.ToString("HH:mm")</dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <div class="mt-3">
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Back to List
        </a>
        @if (canModify)
        {
            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#cancelModal">
                <i class="fas fa-times"></i> Cancel Booking
            </button>
        }
    </div>
</div>

@if (canModify)
{
    <div class="modal fade" id="cancelModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Cancel Booking</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to cancel this booking?</p>
                    <p class="text-danger"><small>This action cannot be undone.</small></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <form asp-action="Cancel" asp-route-id="@Model.Id" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger">Cancel Booking</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}