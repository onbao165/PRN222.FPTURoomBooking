@page "/Account/LoginProcessor"
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.SignalR.Client
@inject HubConnection HubConnection

@code {
    [Parameter] [SupplyParameterFromQuery] public string? Id { get; set; }

    [Parameter] [SupplyParameterFromQuery] public string? Username { get; set; }

    [Parameter] [SupplyParameterFromQuery] public string? Fullname { get; set; }

    [Parameter] [SupplyParameterFromQuery] public string? Email { get; set; }

    [Parameter] [SupplyParameterFromQuery] public string? Role { get; set; }
    
    [Parameter] [SupplyParameterFromQuery] public string? DepartmentId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(Username))
        {
            NavigationManager.NavigateTo("/Account/Login", true);
            return;
        }

        var claims = new List<Claim>
        {
            new("Username ", Username ?? ""),
            new(ClaimTypes.NameIdentifier, Id ?? ""),
            new(ClaimTypes.Name, Fullname ?? ""),
            new(ClaimTypes.Email, Email ?? ""),
            new(ClaimTypes.Role, Role ?? ""),
            new("DepartmentId", DepartmentId ?? "")
        };

        var claimsIdentity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
        var authProperties = new AuthenticationProperties
        {
            IsPersistent = true,
            ExpiresUtc = DateTimeOffset.UtcNow.AddDays(1)
        };

        await HttpContextAccessor.HttpContext!.SignInAsync(
            CookieAuthenticationDefaults.AuthenticationScheme,
            new ClaimsPrincipal(claimsIdentity),
            authProperties);
        
        if (HubConnection.State == HubConnectionState.Connected)
        {
            try
            {
                // Join the department group
                await HubConnection.SendAsync("JoinDepartmentGroup", DepartmentId);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error joining department group: {ex.Message}");
            }
        }

        NavigationManager.NavigateTo("/", true);
    }

}

<div>Processing login...</div>